/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

* {
  -webkit-tap-highlight-color: transparent;
  /* make transparent link selection, adjust last value opacity 0 to 1.0 */
}

body {
  -webkit-touch-callout: none;
  /* prevent callout to copy image, etc when tap to hold */
  -webkit-text-size-adjust: none;
  /* prevent webkit from resizing text to fit */
  -webkit-user-select: none;
  /* prevent copy paste, to allow, change 'none' to 'text' */
  background-color: #E4E4E4;
  font-family: 'HelveticaNeue-Light', 'HelveticaNeue', Helvetica, Arial, sans-serif;
  font-size: 12px;
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
}

.app {
  position: absolute;
  display: flex;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background: #320000 url(../img/wood.jpg) center center;
  background-size: cover;
}

.app::after {
  position: absolute;
  content: '';
  display: block;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(50, 0, 0, 0.5);
}

.content {
  position: relative;
  z-index: 1;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.dice-wrap {
  position: relative;
  margin: 16px;
  background-color: #e7e7e7;
  width: 104px;
  height: 104px;
  object-fit: contain;
  box-shadow: inset 0 5px white, inset 0 -5px #bbb, inset 5px 0 #d7d7d7, inset -5px 0 #d7d7d7;
  border-radius: 10%;
}

.dice {
  display: flex;
  position: absolute;
  padding: 4px;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  opacity: 0;
}

.dice--one {
  justify-content: center;
  align-items: center;
}

.dice--two {
  justify-content: space-between;
}

.dice--two .dot:last-child {
  align-self: flex-end;
}

.dice--three {
  justify-content: space-between;
  align-items: center;
}

.dice--three .dot:first-child {
  align-self: flex-start;
}

.dice--three .dot:last-child {
  align-self: flex-end;
}

.dice--four,
.dice--six {
  justify-content: space-between;
}

.dice--five {
  justify-content: space-between;
}

.dice--five .column:nth-child(2) {
  justify-content: center;
}

.dice.is-visible {
  opacity: 1;
}

.column {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.dot {
  display: block;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  margin: 4px;
  background-color: #333;
  box-shadow: inset 0 3px #111, inset 0 -3px #555;
}

.settings {
  position: absolute;
  left: 10px;
  top: 10px;
  z-index: 2;
}

.settings__button {
  width: 40px;
  height: 40px;
  padding: 20px;
  cursor: pointer;
  opacity: 0.5;
}

.settings__icon {
  width: 100%;
}

.settings__content {
  display: none;
  padding: 15px;
  margin-left: 20px;
  max-width: 200px;
  width: 100%;
  font-size: 14px;
  background: rgba(231, 231, 231, 0.95);
  border-radius: 5px;
}

.settings__content.is-visible {
  display: block;
}

.settings__text {
  margin: 0 0 10px;
}

.settings__item {
  display: flex;
  align-items: center;
  margin-bottom: 10px;
}

.settings__input {
  display: none;
}

.settings__input:checked + .settings__label--radio::after {
  top: 9px;
  left: 9px;
  width: 6px;
  height: 6px;
  background: #fff;
  border-radius: 100%;
}

.settings__input:checked + .settings__label--checkbox::after {
  left: 5px;
  top: 5px;
  width: 15px;
  height: 15px;
  background-size: 8px 8px;
  background: url(../img/check.svg) no-repeat center;
}

.settings__input:checked + .settings__label::before {
  background: #320000;
  border: 2px solid #320000;
}

.settings__label {
  position: relative;
  height: 20px;
  display: flex;
  align-items: center;
  padding-left: 34px;
  line-height: 1.5em;
  cursor: pointer;
}

.settings__label::before,
.settings__label::after {
  position: absolute;
  display: block;
  content: "";
}

.settings__label::before {
  left: 0;
  top: 0;
  width: 20px;
  height: 20px;
  background: #efefef;
  border: 2px solid #bdbdbd;
  transition: background 0.3s ease-out, border 0.3s ease-out, color 0.3s ease-out;
}

.settings__label--radio::before {
  border-radius: 100%;
}

.settings__label--checkbox::before {
  border-radius: 5px;
}

.settings__label:hover::before {
  border: 2px solid #320000;
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/